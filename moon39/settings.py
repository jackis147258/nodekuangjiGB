"""
Django settings for moon39 project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rmj1cn=x&9hlrbqfbw%1yju3dkcmy=z3p8ek76+^*(hdsb1cid'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

# ALLOWED_HOSTS = [a.lhlhlhlh.com]


# Application definition

INSTALLED_APPS = [
    'channels',  #web socket 插件
    # 'daphne',   #注册daphne组件，在channels4.0开始，注册组件使用daphne,一定放在开头       
    'rest_framework',
    'rest_framework.authtoken',   
    'simpleui', 
    'app1',    
    'mptt',    
    'reg',    
    'webInfo',
    "tcAdmin",
    # 'django_amis_render',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders' ,
    'multiselectfield',
    'django_celery_beat',  #定时任务
    'django_celery_results' ,#celery 管理工具
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'moon39.urls'


 

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # 'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'moon39.wsgi.application'

# ASGI_APPLICATION = 'moon39.routing.application'

ASGI_APPLICATION = "moon39.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# ASGI_APPLICATION = 'moon39.asgi.application'
# WSGI_APPLICATION = 'moon39.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# 38.181.50.35  


DATABASES = {
    'default': {
        'ENGINE': config('DATABASE_ENGINE', default='django.db.backends.mysql'),
        'NAME': config('DATABASE_NAME', default=''),
        'HOST': config('DATABASE_HOST', default=''),
        'PORT': config('DATABASE_PORT', default=''),
        'USER': config('DATABASE_USER', default=''),
        'PASSWORD': config('DATABASE_PASSWORD', default=''),
      
    },
    'db1': {
        'ENGINE': config('DATABASE_ENGINE1', default='django.db.backends.mysql'),
        'NAME': config('DATABASE_NAME1', default='cfa'),
        'HOST': config('DATABASE_HOST1', default=''),
        'PORT': config('DATABASE_PORT1', default=''),
        'USER': config('DATABASE_USER1', default='root'),
        'PASSWORD': config('DATABASE_PASSWORD1', default='root'),
    },
}

# DATABASES = {
#     "default": {
#         'ENGINE': 'django.db.backends.mysql',    # 数据库引擎
#         'NAME': 'pytoken', # 数据库名称
#         # 'HOST': 'rm-bp11tx740f2ddjsw80o.mysql.rds.aliyuncs.com', # 数据库地址，本机 ip 地址 127.0.0.1
#         'HOST': '127.0.0.1', # 数据库地址，本机 ip 地址 127.0.0.1    38.181.50.35
#         'PORT': 3306, # 端口
#         'USER': 'pytoken',  # 数据库用户名
#         'PASSWORD': 'Mysql78787801', # 数据库密码
#     },
#     'db1': {   # 配置第二个数据库节点名称       
#         'ENGINE': 'django.db.backends.mysql',    # 数据库引擎
#         'NAME': 'cfa', # 数据库名称
#         'HOST': '127.0.0.1', # 数据库地址，本机 ip 地址 127.0.0.1
#         'PORT': 3306, # 端口
#         'USER': 'root',  # 数据库用户名
#         'PASSWORD': 'root', # 数据库密码
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

 # 更改默认语言为中文
LANGUAGE_CODE = 'zh-hans'
# LANGUAGE_CODE = 'en-us'
# 去掉默认Logo或换成自己Logo链接
# SIMPLEUI_LOGO = 'https://th.bing.com/th/id/R2411a2b340731d67dfa0d84503e915e3?rik=zmYce%2fLys72JVQ&pid=ImgRaw'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Hong_Kong'


USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = 'static/'
# STATIC_ROOT = '/srv/django/static'
STATIC_ROOT = os.path.join(BASE_DIR, "staticWeb")

STATIC_URL = '/static/'
# STATIC_ROOT = '/var/www/staticWeb/'

# STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SIMPLEUI_HOME_INFO = False 
SIMPLEUI_ANALYSIS = False 
# SIMPLEUI_DEFAULT_THEME = 'admin.lte.css'
 # 隐藏首页的快捷操作和最近动作
SIMPLEUI_HOME_QUICK = False 
SIMPLEUI_HOME_ACTION = False
 



SIMPLEUI_HOME_INFO = False
SIMPLEUI_HOME_TITLE = '量化交易'
SIMPLEUI_ANALYSIS = False
# SIMPLEUI_HOME_PAGE = '/app1/mycustompage/'



LOGIN_REDIRECT_URL = '/app1/info/'

 # 修改左侧菜单首页设置
# SIMPLEUI_HOME_PAGE = '/app1/che/'  # 指向页面
SIMPLEUI_HOME_TITLE = '进入' # 首页标题
# SIMPLEUI_HOME_ICON = 'fa fa-code' # 首页图标
SIMPLEUI_CONFIG = {
      # 是否使用系统默认菜单，自定义菜单时建议关闭。
    'system_keep': True,
    # 'system_keep': False,
     
      # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
    #  'menu_display': ['权限认证'],
    #  'menu_display': ['任务管理', '权限认证'],
     
     # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
     # 一般建议关闭。
    'dynamic': False,
    'menus': [
        # {
        #     'app': 'app1',
        #     'name': '量化方案',
        #     'icon': 'fas fa-user-shield',
        #     'url': '/admin/app1/t_quantify1/'             
        # },
        # {
        #     'app': 'app1',
        #     'name': 'tash事件',
        #     'icon': 'fas fa-user-shield',
        #     'url': '/admin/app1/t_task/'             
        # },

        {
            'name': '设置',
            'icon': 'fa fa-th-list',
            'models': [
                {
                'name': '父级管理',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。 
                'url': '/reg/changfu/',
                'icon': 'fa fa-tasks'
                },
                {
                'name': '用户关系',
                # 注意url按'/admin/应用名小写/模型名小写/'命名。 
                'url': '/reg/user_hierarchy/',
                'icon': 'fa fa-tasks'
                },
                # {
                # 'name': '交易查看',
                # # 注意url按'/admin/应用名小写/模型名小写/'命名。 
                # 'url': '/admin/app1/t_trade/',
                # 'icon': 'fa fa-tasks'
                # },
            ]
        }, 
     ]
 }

CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:5500','http://8.210.252.124','http://www.youdao.love']
ALLOWED_HOSTS=['*']

# 允许全部来源
CORS_ORIGIN_ALLOW_ALL  = True  # 如果为True，将不使用白名单，并且将接受所有来源。默认为False。

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "https://yourproductionurl.com",
]

# CORS_ORIGIN_ALLOW_ALL = True

# # 添加访问白名单
# CORS_ORIGIN_WHITELIST  =  [
#     'http://127.0.0.1:5500','http://8.210.252.124','http://localhost:8080'
# ]

# # 白名单也可使用正则
# CORS_ORIGIN_REGEX_WHITELIST  =  [
#     r"^https://\w+\.test\.com$",
# ]


# SECURE_CROSS_ORIGIN_OPENER_POLICY = 'None'


REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 50,
    "DATETIME_FORMAT": "%Y-%m-%d %H:%M:%S",
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [  # 解析request.data
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
        # "rest_framework.permissions.AllowAny",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ]
}

CELERY_BROKER_URL = 'redis://127.0.0.1:6379',
CELERY_RESULT_BACKEND='redis://127.0.0.1:6379/1'
# CELERY_RESULT_BACKEND = 'django-db'
 

  # Celery Configuration Options
CELERY_TIMEZONE = "Asia/Hong_Kong"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

# CELERY_TASK_TIME_LIMIT = None
# CELERY_TASK_SOFT_TIME_LIMIT = None

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = True  # 改为使用 SSL

EMAIL_HOST_USER = '942233@qq.com'
EMAIL_HOST_PASSWORD = 'ngztjvphubnacbae'

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # 确保这行被添加

AUTH_USER_MODEL = 'reg.CustomUser'

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level': 'INFO',#DEBUG INFO WARNING
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(BASE_DIR, 'debug1.log'),
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'WARNING',
#             'propagate': True,
#         },
#     },
# }

#DEBUG INFO WARNING
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',  # 设置为DEBUG以捕获所有级别的日志
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug1.log'),
            'formatter': 'verbose',
        },
        'celery_file': {
            'level': 'INFO',  # 确保捕获所有级别的日志
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'celery_debug.log'),
            'formatter': 'verbose',
        },
    },
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',  # 设置为DEBUG以捕获所有级别的日志
            'propagate': True,
        },
        'celery': {
            'handlers': ['celery_file'],
            'level': 'INFO',
            'propagate': True,
        },
        'mylogger': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# # Celery 配置
# CELERY_WORKER_LOG_FORMAT = '[%(asctime)s] [%(levelname)s] [%(process)d] [%(task_name)s] [%(task_id)s] %(message)s'
CELERY_WORKER_LOG_FORMAT = '[%(asctime)s] [%(levelname)s] [%(process)d]    %(message)s'
# CELERY_WORKER_LOG_FILE = os.path.join(BASE_DIR, 'celery_worker.log')  #'/path/to/celery_worker.log'
CELERY_WORKER_LOG_FILE =  '/www/wwwroot/djangotokens/celery_worker.log'
CELERY_WORKER_REDIRECT_STDOUTS = False  # 如果设置为 True，Celery 会将标准输出和标准错误重定向到日志系统
CELERY_WORKER_TASK_LOG_FORMAT = '[%(asctime)s] [%(levelname)s] [%(process)d]    %(message)s'
# CELERY_WORKER_TASK_LOG_FILE =os.path.join(BASE_DIR, 'celery_worker_tasks.log') # '/path/to/celery_worker_tasks.log'
CELERY_WORKER_TASK_LOG_FILE ='/www/wwwroot/djangotokens/celery_worker_tasks.log'

CELERY_TASK_LOG_FORMAT = '[%(asctime)s] [%(levelname)s] [%(process)d]   %(message)s'
# CELERY_TASK_LOG_FILE =os.path.join(BASE_DIR, 'celery_tasks.log') # '/path/to/celery_tasks.log'
CELERY_TASK_LOG_FILE = '/www/wwwroot/djangotokens/celery_tasks.log'
CELERY_TASK_REDIRECT_STDOUTS = False  # 如果设置为 True，Celery 会将标准输出和标准错误重定向到日志系统